---
import EntryLayout from '@/layouts/EntryLayout.astro'
import type { LoomVideoPageStoryblok } from '@/types/storyblok'
import { storyblokEditable } from '@/storyblok'
import clsx from 'clsx'
import type { StoryblokStory } from 'storyblok-generate-ts'
// import { oembed } from '@loomhq/loom-embed'
import { getLoomIframeSrc } from '@/utils/loom'
import { parseSrt } from '@/utils/srt'

export type Props = {
  story: StoryblokStory<LoomVideoPageStoryblok>
  blok: LoomVideoPageStoryblok
}

const { story, blok } = Astro.props

const loomLink =
  'https://www.loom.com/share/8fcb4e5e4b374ce496b07fd17a48d71d?sid=281f7426-a7d7-4839-8c94-0eb893b76553'
// const loomVideo = loomLink ? await oembed(loomLink, {}) : undefined
const loomVideo = undefined
console.log('loomVideo', loomVideo)

const loomVideoSrc = getLoomIframeSrc(loomVideo?.html ?? '')
const iframeSrc = `${loomVideoSrc}?hide_title=true&hide_owner=true&autoplay=1`
// https://support.loom.com/hc/en-us/articles/360002208317-How-to-embed-your-video-into-a-webpage

const transcript = blok.transcriptSrt ? parseSrt(blok.transcriptSrt) : []
---

<EntryLayout story={story} {...storyblokEditable(blok)}>
  <main class={clsx('px-4 pt-12 md:px-8 lg:px-12')}>
    <div class="grid gap-x-12 gap-y-8 lg:grid-cols-3">
      <div class="lg:col-span-2">
        <div
          class={clsx(
            'relative overflow-hidden rounded-xl',
            'lg:sticky lg:top-12',
          )}
        >
          <div class="relative aspect-16/9">
            <iframe
              src={iframeSrc}
              allowfullscreen
              class="absolute inset-0 h-full w-full"></iframe>
          </div>
        </div>
      </div>
      <div class="">
        <h1 class="font-sans text-4xl font-bold uppercase sm:text-5xl">
          {loomVideo?.title}
        </h1>
        <div class="mt-8">
          {loomVideo?.description}
        </div>
        <div class="mt-8 space-y-6 pb-12">
          <h2 class="font-sans text-3xl font-bold">Transkript</h2>
          <!-- [{
              id: '1',
              startTime: '00:00:11,544',
              startSeconds: 11.544,
              endTime: '00:00:12,682',
              endSeconds: 12.682,
              text: 'Hello'
          }] -->
          {
            transcript.map((line) => (
              <>
                <p class="text-gray-500">
                  <span>{line.startTimeShort}</span>
                </p>
                <p class="!mt-0">{line.text}</p>
              </>
            ))
          }
        </div>
      </div>
      <!-- <div class="relative h-[50svh] w-[calc(50svh_*_16_/_9)]">
      <div class="absolute inset-0 h-full w-full" set:html={loomVideo?.html} />
    </div> -->
    </div>
  </main>
</EntryLayout>
